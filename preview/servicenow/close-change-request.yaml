---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: close-change-request
spec:
  inputs:
    params:
      - name: evidence-locker-url
        description:
      - name: pipeline-run-id
        description:
      - name: servicenow-api-token
        description:
      - name: servicenow-api-url
        description:
      - name: pipeline-pvc
        description: the output pvc - this is where the cloned repository will be stored
      - name: collect-evidence
        description: specifies if the task should write to the evidence locker repo
        default: "true"
      - name: pipeline-debug
        description: Pipeline debug mode
        default: "0"
  stepTemplate:
    env:
      - name: PIPELINE_DEBUG
        value: $(inputs.params.pipeline-debug)
  steps:
    - name: close-cr
      image: wcp-compliance-automation-team-docker-local.artifactory.swg-devops.com/ibm-compliance-automation:0.4
      env:
        - name: SERVICENOW_TOKEN
          value: $(inputs.params.servicenow-api-token)
        - name: SERVICENOW_URL
          value: $(inputs.params.servicenow-api-url)
        - name: EVIDENCE_LOCKER_URL
          value: $(inputs.params.evidence-locker-url)
        - name: PIPELINE_RUN_ID
          value: $(inputs.params.pipeline-run-id)
        - name: COLLECT_EVIDENCE
          value: $(inputs.params.collect-evidence)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          source /artifacts/build.properties

          if [ $PIPELINE_DEBUG == 1 ]; then
            pwd
            env
            trap env EXIT
            set -x
          fi

          export CHANGE_REQUEST_ID

          EVIDENCE_LOCKER_REPO=${EVIDENCE_LOCKER_URL##*/}
          EVIDENCE_LOCKER_ORG=${EVIDENCE_LOCKER_URL%/*}
          EVIDENCE_LOCKER_ORG=${EVIDENCE_LOCKER_ORG##*/}
          export EVIDENCE_LOCKER_REPO=${EVIDENCE_LOCKER_ORG}/${EVIDENCE_LOCKER_REPO}

          cocoa change-request close --collect-evidence=${COLLECT_EVIDENCE}
          echo "Change Request $CHANGE_REQUEST_ID closed"
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume

  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.pipeline-pvc)
